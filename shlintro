#!/usr/bin/env bash
# FIXME: delete this FIXME --- more info at https://github.com/jones77/shlintro
set -o errexit && set -o nounset && set -o pipefail && : # set -o xtrace
__basename="$(      basename "${BASH_SOURCE[0]}" )"
__dirname="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
exit_fail() { [[ -n "$@" ]] && echo "$__basename: $@"; usage; exit 1; }
usage() {
    cat <<USAGE

Usage: $__basename [OPTION]... [FILES]...

  FIXME: a) Update the description, b) describe what the script does, and
  c) check the usage and delete '[FILES]...' if this script doesn't process
  files (ie uses strict argument parsing).

Example:
  $__basename -e first --example second a b c

Options:
  -h, --help            Show this help and exit
  -e, --example ARG     Print example "ARG" information
USAGE
};
# TODO: specify script arguments
__getopt_args=$(set +e && getopt -s bash \
    --options "he:" \
    --longoptions "help,example:" \
    --name ${__basename} -- "$@"
) && eval set -- "${__getopt_args}" || exit_fail
while :
do
    case $1 in
	-h|--help) usage && exit 0 ;;
	# --) :  # strict argument parsing, continue
	--) break  # [FILES]... argument parsing, break
            ;;
        -e|--example)
            shift && echo "The example option's argument is: $1"
	    ;;
	*)
            exit_fail "invalid option: $1"
            ;;
   esac && shift
done
while (( $# ))  # [FILES]... argument parsing
do
    echo "Do something with: $1"

    shift
done
